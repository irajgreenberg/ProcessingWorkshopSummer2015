class NguyenL_ghoti extends AnimatedObject
{
  float x,y,vx,vy;
  NguyenL_ghoti2 rotor;
  
  NguyenL_ghoti()
  {
    x=random(165,width-165);
    y=random(70,height-75);
    vx=random(-5,5);
    vy=random(-5,5);
    rotor=new NguyenL_ghoti2(0,0);
  }
  void display()
  {
    if(vx<0)
    {
      rotor.setX(x+50);
      rotor.setY(y+20);
      rotor.display();
      rotor.move(vx,vy);
      smooth();
      stroke(255);fill(205,222,255);
      beginShape();
      vertex(x-53,y-28);
      bezierVertex(x-50,y-38,x-50,y-50,x-48,y-60);
      bezierVertex(x-30,y-65,x-45,y-35,x-43,y-30);
      endShape();
      beginShape();
      vertex(x-15,y-37);
      bezierVertex(x-13,y-40,x-16,y-60,x-14,y-67);
      bezierVertex(x,y-65,x,y-63,x-5,y-37);
      endShape();
      beginShape();
      vertex(x-60,y+5);
      bezierVertex(x-90,y+7,x-120,y+20,x-150,y+30);
      bezierVertex(x-170,y+50,x-150,y+45,x-140,y+45);
      bezierVertex(x-120,y+40,x-120,y+30,x-55,y+35);
      bezierVertex(x-50,y+35,x-20,y+30,x,y);
      endShape();
      fill(74,115,222);
      beginShape();
      vertex(x-53,y-28);
      bezierVertex(x-50,y-38,x-50,y-50,x-48,y-60);
      bezierVertex(x-30,y-65,x-45,y-35,x-43,y-30);
      endShape();
      beginShape();
      vertex(x-15,y-37);
      bezierVertex(x-13,y-40,x-16,y-60,x-14,y-67);
      bezierVertex(x,y-65,x,y-63,x-5,y-37);
      endShape();
      beginShape();
      vertex(x-60,y+5);
      bezierVertex(x-90,y+7,x-120,y+20,x-150,y+30);
      vertex(x-130,y+32);
      vertex(x-125,y+26);
      vertex(x-105,y+24);
      vertex(x-100,y+17);
      vertex(x-80,y+16);
      vertex(x-75,y+12);
      endShape();
      ellipseMode(CENTER);
      fill(205,222,255);
      ellipse(x,y,150,80);
      beginShape();
      vertex(x+15,y-40);
      bezierVertex(x+40,y-40,x+55,y-45,x+80,y-60);
      bezierVertex(x+85,y-65,x+135,y-70,x+140,y-65);
      bezierVertex(x+160,y-60,x+180,y-45,x+145,y-40);
      bezierVertex(x+125,y-40,x+112,y-33,x+100,y-20);
      vertex(x+60,y+5);
      endShape();
      fill(74,115,222);
      beginShape();
      vertex(x+20,y-40);
      bezierVertex(x+40,y-40,x+55,y-45,x+80,y-60);
      bezierVertex(x+85,y-65,x+135,y-70,x+140,y-65);
      bezierVertex(x+160,y-60,x+180,y-45,x+145,y-40);
      bezierVertex(x+180,y-45,x+160,y-60,x+135,y-65);
      vertex(x+120,y-59);
      vertex(x+102,y-60);
      vertex(x+88,y-47);
      vertex(x+70,y-48);
      vertex(x+60,y-35);
      vertex(x+44,y-38);
      vertex(x+40,y-18);
      bezierVertex(x+35,y-27,x,y-38,x-10,y-33);
      bezierVertex(x-15,y-33,x-30,y-23,x-35,y-25);
      bezierVertex(x-40,y-22,x-40,y-30,x-65,y-20);
      bezierVertex(x-35,y-45,x,y-40,x+15,y-40);
      endShape();
      beginShape();
      vertex(x+100,y-20);
      bezierVertex(x+85,y-15,x+70,y+3,x+60,y);
      bezierVertex(x+63,y+5,x+75,y+10,x+67,y+18);
      bezierVertex(x+75,y+3,x+100,y-20,x+100,y-20);
      endShape();
      stroke(0);noFill();
      ellipse(x-53,y-12,10,10);
      ellipse(x-10,y-20,10,10);
      beginShape();
      vertex(x-40,y-10);
      vertex(x-35,y-2);
      vertex(x-32,y-12);
      vertex(x-26,y-4);
      vertex(x-24,y-14);
      endShape();
    }
    else
    {
      rotor.setX(x-50);
      rotor.setY(y+20);
      rotor.display();
      rotor.move(vx,vy);
      smooth();
      stroke(255);fill(205,222,255);
      beginShape();
      vertex(x+53,y-28);
      bezierVertex(x+50,y-38,x+50,y-50,x+48,y-60);
      bezierVertex(x+30,y-65,x+45,y-35,x+43,y-30);
      endShape();
      beginShape();
      vertex(x+15,y-37);
      bezierVertex(x+13,y-40,x+16,y-60,x+14,y-67);
      bezierVertex(x,y-65,x,y-63,x+5,y-37);
      endShape();
      beginShape();
      vertex(x+60,y+5);
      bezierVertex(x+90,y+7,x+120,y+20,x+150,y+30);
      bezierVertex(x+170,y+50,x+150,y+45,x+140,y+45);
      bezierVertex(x+120,y+40,x+120,y+30,x+55,y+35);
      bezierVertex(x+50,y+35,x+20,y+30,x,y);
      endShape();
      fill(74,115,222);
      beginShape();
      vertex(x+53,y-28);
      bezierVertex(x+50,y-38,x+50,y-50,x+48,y-60);
      bezierVertex(x+30,y-65,x+45,y-35,x+43,y-30);
      endShape();
      beginShape();
      vertex(x+15,y-37);
      bezierVertex(x+13,y-40,x+16,y-60,x+14,y-67);
      bezierVertex(x,y-65,x,y-63,x+5,y-37);
      endShape();
      beginShape();
      vertex(x+60,y+5);
      bezierVertex(x+90,y+7,x+120,y+20,x+150,y+30);
      vertex(x+130,y+32);
      vertex(x+125,y+26);
      vertex(x+105,y+24);
      vertex(x+100,y+17);
      vertex(x+80,y+16);
      vertex(x+75,y+12);
      endShape();
      ellipseMode(CENTER);
      fill(205,222,255);
      ellipse(x,y,150,80);
      beginShape();
      vertex(x-15,y-40);
      bezierVertex(x-40,y-40,x-55,y-45,x-80,y-60);
      bezierVertex(x-85,y-65,x-135,y-70,x-140,y-65);
      bezierVertex(x-160,y-60,x-180,y-45,x-145,y-40);
      bezierVertex(x-125,y-40,x-112,y-33,x-100,y-20);
      vertex(x-60,y+5);
      endShape();
      fill(74,115,222);
      beginShape();
      vertex(x-20,y-40);
      bezierVertex(x-40,y-40,x-55,y-45,x-80,y-60);
      bezierVertex(x-85,y-65,x-135,y-70,x-140,y-65);
      bezierVertex(x-160,y-60,x-180,y-45,x-145,y-40);
      bezierVertex(x-180,y-45,x-160,y-60,x-135,y-65);
      vertex(x-120,y-59);
      vertex(x-102,y-60);
      vertex(x-88,y-47);
      vertex(x-70,y-48);
      vertex(x-60,y-35);
      vertex(x-44,y-38);
      vertex(x-40,y-18);
      bezierVertex(x-35,y-27,x,y-38,x+10,y-33);
      bezierVertex(x+15,y-33,x+30,y-23,x+35,y-25);
      bezierVertex(x+40,y-22,x+40,y-30,x+65,y-20);
      bezierVertex(x+35,y-45,x,y-40,x-15,y-40);
      endShape();
      beginShape();
      vertex(x-100,y-20);
      bezierVertex(x-85,y-15,x-70,y+3,x-60,y);
      bezierVertex(x-63,y+5,x-75,y+10,x-67,y+18);
      bezierVertex(x-75,y+3,x-100,y-20,x-100,y-20);
      endShape();
      stroke(0);noFill();
      ellipse(x+53,y-12,10,10);
      ellipse(x+10,y-20,10,10);
      beginShape();
      vertex(x+40,y-10);
      vertex(x+35,y-2);
      vertex(x+32,y-12);
      vertex(x+26,y-4);
      vertex(x+24,y-14);
      endShape();
    }
  }
  void move()
  {
    if(x-165<0 || x+165>width) {vx=-vx;}
    if(y-70<0 || y+75>height) {vy=-vy;}
    x+=vx;
    y+=vy;
  }
  int getX() {return (int)x;}
  int getY() {return (int)y;}
}
